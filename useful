#!/usr/bin/env bash

is_root()            { [[ "$EUID" -eq 0 ]]; }
pause_for_keypress() { read -n 1 -p "Press any key to continue."; }

# Waits for and returns single keypress, even if it is
# represented by multiple characters.
get_keypress()
{
    local prompt="${1:=Press any key}"

    local keyp
    local echar
    local -a echars
    
    read -n 1 -s -p "${prompt}" keyp
    if [ "$keyp" = '' ]; then

        # pull characters off stdin until buffer is exhausted.
        # `read -t 0` returns 0 if the buffer contains additional
        # characters, non-zero if the buffer is empty:
        while read -t 0; do
            read -n 1 echar
            echars=( "${echars[@]}" "$echar" )
        done

        # empty IFS so array is joined without delimiters
        # when replacing the *keyp* echo value with full
        # keypress representation:
        local IFS=''
        keyp="${keyp}${echars[*]}"
    fi
    echo "$keyp"
}

# Terminal escape code functions:

reset_screen()      { echo -n "[2J[0;0f"; }
clear_line()        { echo -n "[K"; }
unset_text_colors(  { echo -n "[0m"; }

set_text_background()
{
    case "$1" in
        default) echo -n "[49m" ;;
        black)   echo -n "[40m" ;;
        red)     echo -n "[41m" ;;
        green)   echo -n "[42m" ;;
        brown)   echo -n "[43m" ;;
        yellow)  echo -n "[43m" ;;
        blue)    echo -n "[44m" ;;
        magenta) echo -n "[45m" ;;
        cyan)    echo -n "[46m" ;;
        white)   echo -n "[47m" ;;
    esac
}

set_text_foreground()
{
    case "$1" in
        black)   echo -n "[30m"   ;;
        grey)    echo -n "[1;30m" ;;
        red)     echo -n "[1;31m" ;;
        green)   echo -n "[1;32m" ;;
        brown)   echo -n "[2;33m" ;;
        yellow)  echo -n "[1;33m" ;;
        blue)    echo -n "[1;34m" ;;
        magenta) echo -n "[1;35m" ;;
        cyan)    echo -n "[1;36m" ;;
        white)   echo -n "[1;37m" ;;
    esac
}

# Set color before echo, then unset color after echo
cecho()
{
    local msg="$1"
    local color="${2:-green}"
    local background="${3:-default}"

    set_text_background "$background"
    set_text_foreground "$color"
    echo "${msg}"
    unset_text_colors
}
